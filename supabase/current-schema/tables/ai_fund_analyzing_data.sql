-- AI Fund Analyzing Data table
CREATE TABLE ai_fund_analyzing_data (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    matter_id bigint REFERENCES workspaces(id) ON DELETE CASCADE NOT NULL,
    strategy character varying(100) NOT NULL,
    prompt text NOT NULL,
    report_datetime timestamp with time zone NOT NULL,
    created_by uuid REFERENCES auth.users(id) NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL
);

-- Indexes for ai_fund_analyzing_data
CREATE INDEX ai_fund_analyzing_data_matter_id_idx ON ai_fund_analyzing_data USING btree (matter_id);
CREATE INDEX ai_fund_analyzing_data_created_by_idx ON ai_fund_analyzing_data USING btree (created_by);
CREATE INDEX ai_fund_analyzing_data_strategy_idx ON ai_fund_analyzing_data USING btree (strategy);
CREATE INDEX ai_fund_analyzing_data_created_at_idx ON ai_fund_analyzing_data USING btree (created_at DESC);
CREATE INDEX ai_fund_analyzing_data_report_datetime_idx ON ai_fund_analyzing_data USING btree (report_datetime DESC);

-- RLS for ai_fund_analyzing_data
ALTER TABLE ai_fund_analyzing_data ENABLE ROW LEVEL SECURITY;

-- Policies for ai_fund_analyzing_data
CREATE POLICY "Users can view ai fund analyzing data" ON ai_fund_analyzing_data
FOR SELECT USING (
    matter_id IN (
        SELECT matter_id 
        FROM workspace_access 
        WHERE shared_with_user_id = auth.uid()
    )
);

CREATE POLICY "Users can create ai fund analyzing data" ON ai_fund_analyzing_data
FOR INSERT WITH CHECK (
    matter_id IN (
        SELECT matter_id 
        FROM workspace_access 
        WHERE shared_with_user_id = auth.uid() 
        AND access_type = 'edit'
    )
);

CREATE POLICY "Users can update ai fund analyzing data" ON ai_fund_analyzing_data
FOR UPDATE USING (
    matter_id IN (
        SELECT matter_id 
        FROM workspace_access 
        WHERE shared_with_user_id = auth.uid() 
        AND access_type = 'edit'
    )
);

CREATE POLICY "Users can delete ai fund analyzing data" ON ai_fund_analyzing_data
FOR DELETE USING (
    matter_id IN (
        SELECT matter_id 
        FROM workspace_access 
        WHERE shared_with_user_id = auth.uid() 
        AND access_type = 'edit'
    )
);

-- Add trigger for updated_at
CREATE TRIGGER handle_updated_at 
  BEFORE UPDATE ON ai_fund_analyzing_data
  FOR EACH ROW 
  EXECUTE FUNCTION update_updated_at_column();

-- Comments for documentation
COMMENT ON TABLE ai_fund_analyzing_data IS 'AI Fund Analyst analysis requests.
Each record represents a strategy and prompt combination.
LLM responses are stored in the ai_fund_analysis_results table.';

COMMENT ON COLUMN ai_fund_analyzing_data.matter_id IS 'References the workspace/workspace this analysis belongs to';
COMMENT ON COLUMN ai_fund_analyzing_data.strategy IS 'The analysis strategy selected by the user';
COMMENT ON COLUMN ai_fund_analyzing_data.prompt IS 'The user input prompt for analysis';
COMMENT ON COLUMN ai_fund_analyzing_data.report_datetime IS 'When the user requested the report to be generated'; 